{"ast":null,"code":"var _jsxFileName = \"/Users/pavelterenin/workspace/blog-app/src/components/AppContainer/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport FormModal from \"../FormModal\";\nimport BlogPostList from \"../BlogPostList\";\nimport usePostManagement from \"../../hooks/usePostManagement\";\nimport \"./styles.scss\";\nimport Layout from \"../Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContainer() {\n  _s();\n  const {\n    page,\n    setPage,\n    show,\n    setShow,\n    editedPost,\n    setEditedPost,\n    totalCount,\n    setTotalCount,\n    postList,\n    setPostList,\n    createPost,\n    deletePost,\n    updatePost,\n    fetchMore\n  } = usePostManagement();\n  const addPost = post => {\n    setPostList([post, ...postList]);\n  };\n  const handleDelete = async deleingPost => {\n    const updatedPosts = postList.map(post => post.id === deleingPost.id ? {\n      ...post,\n      updating: true\n    } : post);\n    setPostList(updatedPosts);\n    try {\n      const result = await deletePost({\n        variables: {\n          id: deleingPost.id\n        }\n      });\n      setPostList(postList.filter(p => p.id != deleingPost.id));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const handleEditClick = post => {\n    setEditedPost(post);\n    handleShow();\n  };\n  const handleUpdatePost = async (title, body) => {\n    if (!editedPost) return;\n    const updatedPosts = postList.map(post => post.id === editedPost.id ? {\n      ...post,\n      updating: true\n    } : post);\n    setPostList(updatedPosts);\n    try {\n      await updatePost({\n        variables: {\n          id: editedPost.id,\n          input: {\n            title,\n            body\n          }\n        }\n      });\n      const updatedPosts = postList.map(post => post.id === editedPost.id ? {\n        id: editedPost.id,\n        title,\n        body\n      } : post);\n      setPostList(updatedPosts);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const handleClose = () => {\n    setShow(false);\n    setEditedPost(undefined);\n  };\n  const handleShow = () => setShow(true);\n  const fetchNextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n    fetchMore({\n      variables: {\n        options: {\n          paginate: {\n            page: newPage,\n            limit: 20\n          }\n        }\n      }\n    });\n  };\n  const savePendig = async () => {\n    const pendingPosts = postList.filter(post => {\n      return !post.id;\n    });\n    try {\n      for (const post of pendingPosts) {\n        const response = await createPost({\n          variables: {\n            input: post\n          }\n        });\n        const createdPostId = response.data.createPost.id;\n        post.id = createdPostId + Date.now();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      savePendig: savePendig,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(BlogPostList, {\n        onEdit: handleEditClick,\n        onDelete: handleDelete,\n        totalCount: totalCount,\n        fetchNextPage: fetchNextPage,\n        postList: postList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormModal, {\n      updatePost: handleUpdatePost,\n      post: editedPost,\n      show: show,\n      handleClose: handleClose,\n      addPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContainer, \"hkWxEA5JifPEN2IO6MiNQHAtO5Q=\", false, function () {\n  return [usePostManagement];\n});\n_c = AppContainer;\nexport default AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","FormModal","BlogPostList","usePostManagement","Layout","jsxDEV","_jsxDEV","AppContainer","_s","page","setPage","show","setShow","editedPost","setEditedPost","totalCount","setTotalCount","postList","setPostList","createPost","deletePost","updatePost","fetchMore","addPost","post","handleDelete","deleingPost","updatedPosts","map","id","updating","result","variables","filter","p","e","console","error","handleEditClick","handleShow","handleUpdatePost","title","body","input","handleClose","undefined","fetchNextPage","newPage","options","paginate","limit","savePendig","pendingPosts","response","createdPostId","data","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/pavelterenin/workspace/blog-app/src/components/AppContainer/index.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport FormModal from \"../FormModal\";\nimport BlogPostList from \"../BlogPostList\";\nimport usePostManagement from \"../../hooks/usePostManagement\";\nimport { Post } from \"../../Types/types\"\nimport \"./styles.scss\";\nimport Layout from \"../Layout\";\n\n\nfunction AppContainer() {\n\n  const {\n    page, setPage,\n    show, setShow,\n    editedPost, setEditedPost,\n    totalCount, setTotalCount,\n    postList, setPostList,\n    createPost, deletePost, updatePost, fetchMore,\n  } = usePostManagement();\n\n  const addPost = (post: Post) => {\n    setPostList([post, ...postList]);\n  }\n\n  const handleDelete = async (deleingPost: Post) => {\n    const updatedPosts = postList.map(post =>\n      post.id === deleingPost.id ? { ...post, updating: true } : post\n    );\n    setPostList(updatedPosts);\n    try {\n      const result = await deletePost({ variables: { id: deleingPost.id } });\n      setPostList(postList.filter(p => p.id != deleingPost.id));\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleEditClick = (post: Post) => {\n    setEditedPost(post);\n    handleShow();\n  }\n\n  const handleUpdatePost = async (title: string, body: string) => {\n    if (!editedPost) return;\n    const updatedPosts = postList.map(post =>\n      post.id === editedPost.id ? { ...post, updating: true } : post\n    );\n    setPostList(updatedPosts);\n    try {\n      await updatePost({\n        variables: {\n          id: editedPost.id,\n          input: { title, body }\n        }\n      });\n      const updatedPosts = postList.map(post =>\n        post.id === editedPost.id ? { id: editedPost.id, title, body } : post\n      );\n      setPostList(updatedPosts);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const handleClose = () => {\n    setShow(false);\n    setEditedPost(undefined);\n  };\n  const handleShow = () => setShow(true);\n\n  const fetchNextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n    fetchMore({\n      variables: {\n        options: {\n          paginate: {\n            page: newPage,\n            limit: 20\n          }\n        }\n      }\n    })\n  };\n\n  const savePendig = async () => {\n    const pendingPosts = postList.filter(post => { return !post.id });\n    try {\n      for (const post of pendingPosts) {\n        const response = await createPost({\n          variables: {\n            input: post\n          }\n        });\n        const createdPostId = response.data.createPost.id;\n        post.id = createdPostId + Date.now();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n  }\n\n  return (\n    <div className=\"app-container\">\n      <Layout savePendig={savePendig} handleShow={handleShow} />\n      <div className=\"content\">\n        <BlogPostList\n          onEdit={handleEditClick}\n          onDelete={handleDelete}\n          totalCount={totalCount}\n          fetchNextPage={fetchNextPage}\n          postList={postList} />\n      </div>\n      <FormModal\n        updatePost={handleUpdatePost}\n        post={editedPost}\n        show={show}\n        handleClose={handleClose}\n        addPost={addPost} />\n    </div >\n  );\n}\n\nexport default AppContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}