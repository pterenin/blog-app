{"ast":null,"code":"var _jsxFileName = \"/Users/pavelterenin/workspace/blog-app/src/components/AppContainer/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FormModal from \"../FormModal\";\nimport BlogPostList from \"../BlogPostList\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_POSTS } from \"./queries\";\nimport { DELETE_POST, CREATE_POST, UPDATE_POST } from \"./mutations\";\nimport \"./styles.scss\";\nimport Layout from \"../Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContainer() {\n  _s();\n  const [show, setShow] = useState(false);\n  const [page, setPage] = useState(1);\n  const [editedPost, setEditedPost] = useState(undefined);\n  const [totalCount, setTotalCount] = useState(0);\n  const [postList, setPostList] = useState([]);\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_POSTS, {\n    variables: {\n      options: {\n        paginate: {\n          page: page,\n          limit: 20\n        }\n      }\n    }\n  });\n  const [createPost, {\n    data: createPostData,\n    loading: createPostLoading,\n    error: createPostError\n  }] = useMutation(CREATE_POST);\n  const [deletePost, {\n    loading: deleting,\n    error: deleteError\n  }] = useMutation(DELETE_POST, {\n    onCompleted: () => {}\n  });\n  const [updatePost, {\n    loading: updating,\n    error: updateError\n  }] = useMutation(UPDATE_POST);\n  useEffect(() => {\n    var _data$posts;\n    if (!(data !== null && data !== void 0 && (_data$posts = data.posts) !== null && _data$posts !== void 0 && _data$posts.data)) return;\n    setPostList([...postList, ...data.posts.data]);\n    setTotalCount(data.posts.meta.totalCount);\n  }, [loading]);\n  const addPost = post => {\n    setPostList([post, ...postList]);\n  };\n  const handleDelete = async deleingPost => {\n    const updatedPosts = postList.map(post => post.id === deleingPost.id ? {\n      ...post,\n      updating: true\n    } : post);\n    setPostList(updatedPosts);\n    try {\n      const result = await deletePost({\n        variables: {\n          id: deleingPost.id\n        }\n      });\n      setPostList(postList.filter(p => p.id != deleingPost.id));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const handleEditClick = post => {\n    setEditedPost(post);\n    handleShow();\n  };\n  const handleUpdatePost = async (title, body) => {\n    if (!editedPost) return;\n    const updatedPosts = postList.map(post => post.id === editedPost.id ? {\n      ...post,\n      updating: true\n    } : post);\n    try {\n      await updatePost({\n        variables: {\n          id: editedPost.id,\n          input: {\n            title,\n            body\n          }\n        }\n      });\n      const updatedPosts = postList.map(post => post.id === editedPost.id ? {\n        id: editedPost.id,\n        title,\n        body\n      } : post);\n      setPostList(updatedPosts);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const handleClose = () => {\n    setShow(false);\n    setEditedPost(undefined);\n  };\n  const handleShow = () => setShow(true);\n  const fetchNextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n    fetchMore({\n      variables: {\n        options: {\n          paginate: {\n            page: newPage,\n            limit: 20\n          }\n        }\n      }\n    });\n  };\n  const savePendig = async () => {\n    const pendingPosts = postList.filter(post => {\n      return !post.id;\n    });\n    try {\n      for (const post of pendingPosts) {\n        const response = await createPost({\n          variables: {\n            input: post\n          }\n        });\n        const createdPostId = response.data.createPost.id;\n        post.id = createdPostId + Date.now();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      savePendig: savePendig,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(BlogPostList, {\n        onEdit: handleEditClick,\n        onDelete: handleDelete,\n        totalCount: totalCount,\n        fetchNextPage: fetchNextPage,\n        postList: postList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormModal, {\n      updatePost: handleUpdatePost,\n      post: editedPost,\n      show: show,\n      handleClose: handleClose,\n      addPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContainer, \"gVKZjlN3scPzRBTJPm/g7xrkttY=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation];\n});\n_c = AppContainer;\nexport default AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","useEffect","useState","FormModal","BlogPostList","useQuery","useMutation","GET_POSTS","DELETE_POST","CREATE_POST","UPDATE_POST","Layout","jsxDEV","_jsxDEV","AppContainer","_s","show","setShow","page","setPage","editedPost","setEditedPost","undefined","totalCount","setTotalCount","postList","setPostList","loading","error","data","fetchMore","variables","options","paginate","limit","createPost","createPostData","createPostLoading","createPostError","deletePost","deleting","deleteError","onCompleted","updatePost","updating","updateError","_data$posts","posts","meta","addPost","post","handleDelete","deleingPost","updatedPosts","map","id","result","filter","p","e","console","handleEditClick","handleShow","handleUpdatePost","title","body","input","handleClose","fetchNextPage","newPage","savePendig","pendingPosts","response","createdPostId","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/pavelterenin/workspace/blog-app/src/components/AppContainer/index.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport FormModal from \"../FormModal\";\nimport BlogPostList from \"../BlogPostList\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_POSTS } from \"./queries\";\nimport { DELETE_POST, CREATE_POST, UPDATE_POST } from \"./mutations\";\nimport { Post } from \"../../Types/types\"\nimport \"./styles.scss\";\nimport Layout from \"../Layout\";\n\n\nfunction AppContainer() {\n  const [show, setShow] = useState(false);\n  const [page, setPage] = useState(1);\n  const [editedPost, setEditedPost] = useState<Post | undefined>(undefined);\n  const [totalCount, setTotalCount] = useState(0);\n  const [postList, setPostList] = useState<Post[]>([]);\n\n  const { loading, error, data, fetchMore } = useQuery(GET_POSTS, {\n    variables: {\n      options: {\n        paginate: {\n          page: page,\n          limit: 20\n        }\n      }\n    }\n  });\n  const [createPost, { data: createPostData, loading: createPostLoading, error: createPostError }] = useMutation(CREATE_POST);\n  const [deletePost, { loading: deleting, error: deleteError }] = useMutation(DELETE_POST, {\n    onCompleted: () => {\n    }\n  });\n  const [updatePost, { loading: updating, error: updateError }] = useMutation(UPDATE_POST);\n\n  useEffect(() => {\n    if (!data?.posts?.data) return;\n    setPostList([...postList, ...data.posts.data]);\n    setTotalCount(data.posts.meta.totalCount);\n  }, [loading]);\n\n  const addPost = (post: Post) => {\n    setPostList([post, ...postList]);\n  }\n\n  const handleDelete = async (deleingPost: Post) => {\n    const updatedPosts = postList.map(post =>\n      post.id === deleingPost.id ? { ...post, updating: true } : post\n    );\n    setPostList(updatedPosts);\n    try {\n      const result = await deletePost({ variables: { id: deleingPost.id } });\n      setPostList(postList.filter(p => p.id != deleingPost.id));\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleEditClick = (post: Post) => {\n    setEditedPost(post);\n    handleShow();\n  }\n\n  const handleUpdatePost = async (title: string, body: string) => {\n    if (!editedPost) return;\n    const updatedPosts = postList.map(post =>\n      post.id === editedPost.id ? { ...post, updating: true } : post\n    );\n    try {\n      await updatePost({\n        variables: {\n          id: editedPost.id,\n          input: { title, body }\n        }\n      });\n      const updatedPosts = postList.map(post =>\n        post.id === editedPost.id ? { id: editedPost.id, title, body } : post\n      );\n      setPostList(updatedPosts);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const handleClose = () => {\n    setShow(false);\n    setEditedPost(undefined);\n  };\n  const handleShow = () => setShow(true);\n\n  const fetchNextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n    fetchMore({\n      variables: {\n        options: {\n          paginate: {\n            page: newPage,\n            limit: 20\n          }\n        }\n      }\n    })\n  };\n\n  const savePendig = async () => {\n    const pendingPosts = postList.filter(post => { return !post.id });\n    try {\n      for (const post of pendingPosts) {\n        const response = await createPost({\n          variables: {\n            input: post\n          }\n        });\n        const createdPostId = response.data.createPost.id;\n        post.id = createdPostId + Date.now();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n  }\n\n  return (\n    <div className=\"app-container\">\n      <Layout savePendig={savePendig} handleShow={handleShow} />\n      <div className=\"content\">\n        <BlogPostList\n          onEdit={handleEditClick}\n          onDelete={handleDelete}\n          totalCount={totalCount}\n          fetchNextPage={fetchNextPage}\n          postList={postList} />\n      </div>\n      <FormModal\n        updatePost={handleUpdatePost}\n        post={editedPost}\n        show={show}\n        handleClose={handleClose}\n        addPost={addPost} />\n    </div >\n  );\n}\n\nexport default AppContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}